[{"C:\\Users\\Lenovo\\movie\\src\\index.js":"1","C:\\Users\\Lenovo\\movie\\src\\reportWebVitals.js":"2","C:\\Users\\Lenovo\\movie\\src\\App.js":"3","C:\\Users\\Lenovo\\movie\\src\\api.js":"4","C:\\Users\\Lenovo\\movie\\src\\mov.js":"5","C:\\Users\\Lenovo\\movie\\src\\Detail.js":"6","C:\\Users\\Lenovo\\movie\\src\\serve.js":"7","C:\\Users\\Lenovo\\movie\\src\\login.js":"8","C:\\Users\\Lenovo\\movie\\src\\data.js":"9","C:\\Users\\Lenovo\\movie\\src\\firebase.js":"10","C:\\Users\\Lenovo\\movie\\src\\watch.js":"11","C:\\Users\\Lenovo\\movie\\src\\Sign.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":751,"mtime":1612780864846,"results":"16","hashOfConfig":"14"},{"size":5834,"mtime":1612698933911,"results":"17","hashOfConfig":"14"},{"size":9738,"mtime":1612780549452,"results":"18","hashOfConfig":"14"},{"size":11139,"mtime":1612783039756,"results":"19","hashOfConfig":"14"},{"size":398,"mtime":1608448020086,"results":"20","hashOfConfig":"14"},{"size":2037,"mtime":1614181381899,"results":"21","hashOfConfig":"14"},{"size":154,"mtime":1608451423475,"results":"22","hashOfConfig":"14"},{"size":515,"mtime":1608559296108,"results":"23","hashOfConfig":"14"},{"size":2453,"mtime":1612630416895,"results":"24","hashOfConfig":"14"},{"size":5715,"mtime":1612630410686,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xibn2f",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"C:\\Users\\Lenovo\\movie\\src\\index.js",[],["57","58"],"C:\\Users\\Lenovo\\movie\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\movie\\src\\App.js",["59","60"],"import logo from './logo.svg';\nimport './App.css';\nimport Mov from './mov.js';\nimport React from \"react\";\nimport MovieDetail from \"./Detail.js\";\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\";\nimport Login from \"./login.js\";\nimport Watch from './watch.js';\nimport Sign from './Sign.js'\nexport function App() {\n  return (\n    <main>\n      <BrowserRouter>\n        <Route path=\"/\" component={Mov} exact></Route>\n        <Route path=\"/movie/:id\" component={MovieDetail} exact></Route>\n        <Route path=\"/login\" component={Login} exact></Route>\n        <Route path=\"/watchlist\" component={Watch} exact></Route>\n        <Route path=\"/login/:user\" component={Sign} exact></Route>\n      </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;","C:\\Users\\Lenovo\\movie\\src\\api.js",["61"],"import axios from 'axios';\r\nconst apiKey = 'a4999a28333d1147dbac0d104526337a';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topratedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl = `${url}/movie`;\r\nconst genreUrl = `${url}/genre/movie/list`;\r\nconst moviesUrl = `${url}/discover/movie`;\r\nconst personUrl = `${url}/trending/person/week`;\r\nconst search= `${url}/search/movie`;\r\nexport const fetchMovies = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularity'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchGenre = async () => {\r\n    try {\r\n        const { data } = await axios.get(genreUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const modifiedData = data['genres'].map((g) => ({\r\n            id: g['id'],\r\n            name: g['name']\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchMovieByGenre = async (genre_id) => {\r\n    try {\r\n        const { data } = await axios.get(moviesUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1,\r\n                with_genres: genre_id\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularity'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchPersons = async () => {\r\n    try {\r\n        const { data } = await axios.get(personUrl, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        const modifiedData = data['results'].map((p) => ({\r\n            id: p['id'],\r\n            popularity: p['popularity'],\r\n            name: p['name'],\r\n            profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\r\n            known: p['known_for_department']\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchTopratedMovie = async () => {\r\n    try {\r\n        const { data } = await axios.get(topratedUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchMovieDetail = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchMovieVideos = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}/videos`, {\r\n            params: {\r\n                api_key: apiKey,\r\n            }\r\n        });\r\n        return data['results'][0];\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchCasts = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}/credits`, {\r\n            params: {\r\n                api_key: apiKey,\r\n            }\r\n        });\r\n        const modifiedData = data['cast'].map((c) => ({\r\n            id: c['cast_id'],\r\n            character: c['character'],\r\n            name: c['name'],\r\n            img: 'https://image.tmdb.org/t/p/w200' + c['profile_path'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchSimilarMovie = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}/similar`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        });\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularity'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\nexport const ftch=async(name)=>\r\n{\r\n    try\r\n    {\r\n              const { data } = await axios.get('https://api.themoviedb.org/3/search/movie?query='+name+'&api_key=feb6f0eeaa0a72662967d77079850353');\r\n              return data;\r\n    }\r\n \r\n    catch(error)\r\n    {\r\n\r\n    }\r\n};","C:\\Users\\Lenovo\\movie\\src\\mov.js",["62","63","64","65","66","67","68","69","70","71","72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport RBCarousel from \"react-bootstrap-carousel\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n  fetchMovies,\r\n  fetchGenre,\r\n  fetchMovieByGenre,\r\n  fetchPersons,\r\n  fetchTopratedMovie,\r\n  ftch,\r\n} from \"./api.js\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nfunction Mov() {\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [movieByGenre, setMovieByGenre] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [search,setSearch]=useState([]);\r\n\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const v=\"https://image.tmdb.org/t/p/original///\";\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setNowPlaying(await fetchMovies());\r\n      setGenres(await fetchGenre());\r\n      setMovieByGenre(await fetchMovieByGenre(28));\r\n      setPersons(await fetchPersons());\r\n      setTopRated(await fetchTopratedMovie());\r\n\r\n      \r\n    }; fetchAPI();\r\n  }, []);\r\n   const handleGenreClick = async (genre_id) => {\r\n    setMovieByGenre(await fetchMovieByGenre(genre_id));\r\n  };\r\n\r\n   const searchs = async()=>\r\n   {\r\n     const x=document.getElementById(\"sear\").value;\r\n     setSearch(await ftch(x));\r\n     togglePopup();\r\n     document.getElementById(\"body\").innerHTML=\"\";\r\n    console.log(search.results)\r\n   }\r\n    const S = topRated.slice(0,4).map((item, index) => { return ( <div className=\"col-md-3\" key={index}> <div className=\"card\"> <Link to={`/movie/${item.id}`}><img className=\"img-fluid\" src={item.poster} alt={item.title} ></img></Link>  </div> <div className=\"mt-3\"> <p style={{ fontWeight: \"bolder\" }}>{item.title}</p> <p>Rated: {item.rating}</p> <ReactStars count={item.rating} size={20} color1={\"#f4c10f\"} ></ReactStars> </div> </div> ); });\r\n\r\n  const genreList = genres.map((item, index) => {\r\n    return (\r\n      <li className=\"list-inline-item\" key={index}>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-info\"\r\n          onClick={() => {\r\n            handleGenreClick(item.id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n   const trendingPersons = persons.slice(0, 4).map((p, i) => {\r\n    return (\r\n      <div className=\"col-md-3 text-center\" key={i}>\r\n        <img\r\n          className=\"img-fluid rounded-circle mx-auto d-block\"\r\n          src={p.profileImg}\r\n          alt={p.name}\r\n        ></img>\r\n        <p className=\"font-weight-bold text-center\">{p.name}</p>\r\n        <p\r\n          className=\"font-weight-light text-center\"\r\n          style={{ color: \"#5a606b\" }}\r\n        >\r\n          Trending for {p.known}\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n const topRatedList = topRated.slice(0, 4).map((item, index) => { return ( \r\n  <div className=\"col-md-3\" key={index}> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${item.id}`}>\r\n  <img className=\"img-fluid\" src={item.poster} alt={item.title} >\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{item.title}</p> \r\n  <p>Rated: {item.rating}</p> \r\n  <ReactStars count={item.rating} size={20} color1={\"#f4c10f\"} ></ReactStars> </div> </div> ); });\r\n const movieList = movieByGenre.slice(0, 4).map((item, index) => { return ( <div className=\"col-md-3 col-sm-6\" key={index}> <div className=\"card\"> <Link to={`/movie/${item.id}`}><img className=\"img-fluid\" src={item.poster} alt={item.title} id=\"card\"></img></Link>  </div> <div className=\"mt-3\"> <p style={{ fontWeight: \"bolder\" }}>{item.title}</p> <p>Rated: {item.rating}</p> <ReactStars count={item.rating} size={20} color1={\"#f4c10f\"} ></ReactStars> </div> </div> ); });\r\n  return (\r\n    <React.Fragment>\r\n    <div className=\"App\">\r\n      <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\r\n    <a href=\"#\" class=\"navbar-brand\">MOVIE</a>\r\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\r\n        <div class=\"navbar-nav\">\r\n            <a href=\"/\" class=\"nav-item nav-link active\">Home</a>\r\n            <a href=\"/watchlist\" class=\"nav-item nav-link\">Watchlist</a>\r\n        </div>\r\n        <form className=\"form-inline\">\r\n            <div class=\"input-group\">                    \r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\" id=\"sear\" />\r\n                <div class=\"input-group-append\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" onClick={searchs}><i class=\"fa fa-search\"></i></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"navbar-nav\">\r\n            <a href=\"/login\" class=\"nav-item nav-link\">Login</a>\r\n        </div>\r\n\r\n    </div>\r\n</nav>\r\n  {isOpen &&  <div id=\"popup-box\">\r\n      <div id=\"box\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-3 col-xs-12\"> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[0].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[0].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[0].title}</p> \r\n  </div>\r\n  </div>\r\n  <div className=\"col-md-3\">\r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[1].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[1].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[1].title}</p> \r\n   </div>\r\n   </div>\r\n   <div className=\"col-md-3 col-xs-12\"> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[2].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[2].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[2].title}</p> \r\n  </div>\r\n  </div>\r\n  <div className=\"col-md-3 col-xs-12\"> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[3].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[3].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[3].title}</p> \r\n  </div>\r\n  </div>\r\n  </div>\r\n  <div className=\"row\">\r\n      <div className=\"col-md-3 col-xs-12\"> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[4].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[4].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[4].title}</p> \r\n  </div>\r\n  </div>\r\n  <div className=\"col-md-3\">\r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[5].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[5].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[5].title}</p> \r\n   </div>\r\n   </div>\r\n   <div className=\"col-md-3 col-xs-12\"> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[6].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[6].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[6].title}</p> \r\n  </div>\r\n  </div>\r\n  <div className=\"col-md-3 col-xs-12\"> \r\n  <div className=\"card\"> \r\n  <Link to={`/movie/${search.results[7].id}`}>\r\n  <img className=\"img-fluid\"  src={`https://image.tmdb.org/t/p/original///${search.results[7].poster_path}`}>\r\n  </img>\r\n  </Link>  \r\n  </div> \r\n  <div className=\"mt-3\"> \r\n  <p style={{ fontWeight: \"bolder\" }}>{search.results[7].title}</p> \r\n  </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n}\r\n   <div id=\"body\">\r\n     <div className=\"row mt-3\" >\r\n        <div className=\"col\">\r\n          <ul className=\"list-inline\">{genreList}</ul>\r\n  \r\n        </div>\r\n      </div>\r\n  <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"fa-arrow\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{movieList}</div>\r\n <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            TRENDING PERSONS ON THIS WEEK\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"fa fa-arrow\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{trendingPersons}</div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            TOP RATED MOVIES\r\n          </p>\r\n        </div>\r\n      </div>\r\n <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"far fa-arrow\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{topRatedList}</div>\r\n <div className=\"row mt-3\">{searchs}</div>\r\n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\r\n    </div>\r\n   </div>  \r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Mov;\r\n","C:\\Users\\Lenovo\\movie\\src\\Detail.js",["75","76","77","78","79","80","81","82"],"import React,{useState,useEffect} from \"react\";\r\nimport {\r\n  fetchMovieDetail,\r\n  fetchMovieVideos,\r\n  fetchCasts,\r\n  fetchSimilarMovie,\r\n} from \"./api.js\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Back from \"./serve.js\";\r\nimport firebase from './firebase.js';\r\nimport ReactPlayer from \"react-player\";\r\nimport {Modal} from \"react-bootstrap\";\r\nfunction MovieDetail({ match }) {\r\n  let params = match.params;\r\n  let genres = [];\r\n  var x=\"Add to Watchlist\";\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [detail, setDetail] = useState([]);\r\n  const [video, setVideo] = useState([]);\r\n  const [casts, setCasts] = useState([]);\r\n  const [similarMovie, setSimilarMovie] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDetail(await fetchMovieDetail(params.id));\r\n      setVideo(await fetchMovieVideos(params.id));\r\n      setCasts(await fetchCasts(params.id));\r\n      setSimilarMovie(await fetchSimilarMovie(params.id));\r\n       console.log(video);\r\n        \r\n  \r\n    \r\n    };\r\n\r\n    fetchAPI();\r\n  }, [params.id]);\r\n  genres = detail.genres;\r\n  const ref=firebase.database().ref(\"Mov\");\r\n    ref.on('value',(snapshot)=>{\r\n       const mo=snapshot.val();\r\n         for(let id in mo)\r\n         {\r\n              if(mo[id].title==detail.title)\r\n              {\r\n                x=\"Added\"\r\n                document.getElementById(\"F\").innerHTML=\"Added\"\r\n              }\r\n              else\r\n                console.log(detail.title)\r\n         }\r\n        \r\n      });\r\n  var z=0;\r\n \r\nconst MoviePalyerModal = (props) => {\r\n    const youtubeUrl = \"https://www.youtube.com/watch?v=\";\r\n    return (\r\n     <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title\r\n            id=\"contained-modal-title-vcenter\"\r\n            style={{ color: \"#000000\", fontWeight: \"bolder\" }}\r\n          >\r\n            {detail.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ backgroundColor: \"#000000\" }}>\r\n          <ReactPlayer\r\n            className=\"container-fluid\"\r\n            url={youtubeUrl + video.key}\r\n            playing\r\n            width=\"100%\"\r\n          ></ReactPlayer>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n  let genresList;\r\n  if (genres) {\r\n    genresList = genres.map((g, i) => {\r\n      return (\r\n        <li className=\"list-inline-item\" key={i}>\r\n          <button type=\"button\" className=\"btn btn-outline-info\">\r\n            {g.name}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  const castList = casts.slice(0, 4).map((c, i) => {\r\n    return (\r\n      <div className=\"col-md-3 text-center\" key={i}>\r\n        <img\r\n          className=\"img-fluid rounded-circle mx-auto d-block\"\r\n          src={c.img}\r\n          alt={c.name}\r\n        ></img>\r\n        <p className=\"font-weight-bold text-center\">{c.name}</p>\r\n        <p\r\n          className=\"font-weight-light text-center\"\r\n          style={{ color: \"#5a606b\" }}\r\n        >\r\n          {c.character}\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n      \r\n   \r\n  const similarMovieList = similarMovie.slice(0, 4).map((item, index) => {\r\n    return (\r\n      <div className=\"col-md-3 col-sm-6\" key={index}>\r\n        <div className=\"card\">\r\n          <Link to={`/movie/${item.id}`}>\r\n            <img className=\"img-fluid\" src={item.poster} alt={item.title}></img>\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <p style={{ fontWeight: \"bolder\" }}>{item.title}</p>\r\n          <p>Rated: {item.rating}</p>\r\n          <ReactStars\r\n            count={item.rating}\r\n            size={20}\r\n            color1={\"#f4c10f\"}\r\n          ></ReactStars>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  const watch=()=>\r\n  {  \r\n    if(x==\"Add to Watchlist\")\r\n    {\r\n      const rref=firebase.database().ref(\"Mov\");\r\n      const det=\r\n      {\r\n    \t title:detail.title,\r\n    \t poster:`http://image.tmdb.org/t/p/original/${detail.poster_path}`\r\n      }\r\n     rref.push(det);\r\n     document.getElementById(\"F\").innerHTML=\"Added\";\r\n    }\r\n    else\r\n    {\r\n      console.log(\"A\")\r\n    }\r\n }\r\n  return (\r\n    <div className=\"container\">\r\n     <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\r\n    <a href=\"#\" class=\"navbar-brand\">MOVIE</a>\r\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\r\n        <div class=\"navbar-nav\">\r\n            <a href=\"/\" class=\"nav-item nav-link active\">Home</a>\r\n            <a href=\"#\" class=\"nav-item nav-link\">Watchlist</a>\r\n            \r\n        </div>\r\n        <form class=\"form-inline\">\r\n            <div class=\"input-group\">                    \r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\"/>\r\n                <div class=\"input-group-append\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\"><i class=\"fa fa-search\"></i></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"navbar-nav\">\r\n            <a href=\"#\" class=\"nav-item nav-link\">Login</a>\r\n        </div>\r\n\r\n    </div>\r\n</nav>\r\n      <div className=\"row mt-2\">\r\n         <MoviePalyerModal\r\n          show={isOpen}\r\n          onHide={() => {\r\n            setIsOpen(false);\r\n          }}\r\n        ></MoviePalyerModal>\r\n        <div className=\"col text-center\" style={{ width: \"100%\" }}>\r\n         \r\n          <img\r\n            className=\"img-fluid\"\r\n            src={`http://image.tmdb.org/t/p/original/${detail.backdrop_path}`}\r\n            alt={detail.title}\r\n          ></img>\r\n          <div className=\"carousel-center\">\r\n            <i className=\"fa fa-play\" onClick={() => setIsOpen(true)}\r\n              \r\n              style={{ fontSize: 95, color: \"#f4c10f\", cursor: \"pointer\" }}\r\n            ></i>\r\n          </div>\r\n\r\n          <div\r\n            className=\"carousel-caption\"\r\n            style={{ textAlign: \"center\", fontSize: 35 }}\r\n          >\r\n            {detail.title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>GENRE</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <ul className=\"list-inline\">{genresList}</ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"text-center\">\r\n            <ReactStars\r\n              count={detail.vote_average}\r\n              size={20}\r\n              color1={\"#f4c10f\"}\r\n            ></ReactStars>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>OVERVIEW</p>\r\n            {detail.overview}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-md-3\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>RELEASE DATE</p>\r\n          <p style={{ color: \"#f4c10f\" }}>{detail.release_date}</p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>RUN TIME</p>\r\n          <p style={{ color: \"#f4c10f\" }}>{detail.runtime}</p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>BUDGET</p>\r\n          <p style={{ color: \"#f4c10f\" }}>{detail.budget}</p>\r\n        </div>       <div className=\"col-md-3\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>HOMEPAGE</p>\r\n          <p style={{ color: \"#f4c10f\" }}>{detail.homepage}</p>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-secondary\" id=\"F\" onClick={watch}>{x}</button>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>CASTS</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{castList}</div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p style={{ color: \"#5a606b\", fontWeight: \"bolder\" }}>\r\n            SIMILAR MOVIES\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">{similarMovieList}</div>\r\n\r\n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\r\n\r\n      <div className=\"row mt-3 mb-5\">\r\n        <div className=\"col-md-8 col-sm-6\" style={{ color: \"#5a606b\" }}>\r\n          <h3>ABOUT ME</h3>\r\n          <p>\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi\r\n            error earum perspiciatis praesentium sint ipsum provident blanditiis\r\n            pariatur necessitatibus voluptas, cum, atque iste eligendi autem,\r\n            culpa cupiditate placeat facilis repellat.\r\n          </p>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Minus,\r\n            perspiciatis? Numquam, enim illo voluptatum neque facere aut sed ut\r\n            dolore nihil? Nulla sit, recusandae ea tenetur rerum deserunt sequi\r\n            earum?\r\n          </p>\r\n          <ul className=\"list-inline\">\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n                <i className=\"fa fa-facebook\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n                <i className=\"fa fa-youtube\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n                <i className=\"fa fa-twitter\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n              <a href=\"/\" style={{ color: \"#f4c10f\" }}>\r\n                <i className=\"fa fa-instagram\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-4 col-sm-6\" style={{ color: \"#5a606b\" }}>\r\n          <h3>KEEP IN TOUCH</h3>\r\n          <ul className=\"list-unstyled\">\r\n            <li>\r\n              <p>\r\n                <strong>\r\n                  <i className=\"fa fa-map-marker\"></i> Address:\r\n                </strong>{\" \"}\r\n                city, state, country\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p>\r\n                <strong>\r\n                  <i className=\"fa fa-map-marker\"></i> Phone:\r\n                </strong>{\" \"}\r\n                +01 00 00 00\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <p>\r\n                <strong>\r\n                  <i className=\"fa fa-envelope\"></i> Email:\r\n                </strong>{\" \"}\r\n                info@infomail.com\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MovieDetail;","C:\\Users\\Lenovo\\movie\\src\\serve.js",[],"C:\\Users\\Lenovo\\movie\\src\\login.js",["83","84","85","86","87","88","89"],"C:\\Users\\Lenovo\\movie\\src\\data.js",[],"C:\\Users\\Lenovo\\movie\\src\\firebase.js",[],"C:\\Users\\Lenovo\\movie\\src\\watch.js",["90","91","92","93","94"],"import React,{useState,useEffect} from 'react';\r\nimport firebase from './firebase.js';\r\nexport default function Watch()\r\n{\r\n\t\tconst [\r\n\tstate,setState]=useState\r\n    ({ \r\n      results:[], \r\n      id:[],\r\n    }); \r\n\t\tuseEffect(()=>{\r\n\t\r\n\tconst r=async()=>{\r\n        const ref=firebase.database().ref(\"Mov\");\r\n\t\tref.on('value',(snapshot)=>{\r\n       const mo=snapshot.val();\r\n         for(let id in mo)\r\n         {\r\n              state.id.push(id);\r\n              state.results.push(mo[id]);\r\n              console.log(state.id);\r\n         }\r\n        console.log(state.results);   \r\n        console.log(state.id[0]); \r\n      });\r\n\t }\r\n\t r();\r\n\t},[])\r\n    var a=-1;\r\nconst sam = state.results.map((item, index) => {\r\n    a++;\r\n    return (\r\n      <div className=\"col-md-6 col-sm-12\"  key={index} id={a}>\r\n        <div className=\"card\" id=\"c\">\r\n            <img className=\"img-fluid\" id=\"P\" src={item.poster} alt={item.title}></img>\r\n             <h2 className=\"center\">{item.title}></h2>\r\n             <button class=\"s\" id={a} onClick={(e)=>rem(e.target.id)}>X</button>\r\n      </div>\r\n      </div>\r\n       );\r\n  });\r\nconst rem=(id)=>\r\n{\r\n  const t=firebase.database().ref('Mov').child(state.id[id]);\r\n  t.remove();\r\n  document.getElementById(id).remove();  \r\n}\r\n\r\n\treturn(\r\n\t<div className=\"container\">\r\n     <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\r\n    <a href=\"#\" class=\"navbar-brand\">MOVIE</a>\r\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\r\n        <div class=\"navbar-nav\">\r\n            <a href=\"/\" class=\"nav-item nav-link\">Home</a>\r\n            <a href=\"#\" class=\"nav-item nav-link active\">Watchlist</a>\r\n            \r\n        </div>\r\n        <form class=\"form-inline\">\r\n            <div class=\"input-group\">                    \r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\"/>\r\n                <div class=\"input-group-append\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\"><i class=\"fa fa-search\"></i></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"navbar-nav\">\r\n            <a href=\"#\" class=\"nav-item nav-link\">Login</a>\r\n        </div>\r\n  </div>\r\n</nav>\r\n<div>\r\n{ state.results?sam:''}\r\n</div>\r\n</div>\r\n     \r\n\t)\r\n}","C:\\Users\\Lenovo\\movie\\src\\Sign.js",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\r\nimport RBCarousel from \"react-bootstrap-carousel\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n  fetchMovies,\r\n  fetchGenre,\r\n  fetchMovieByGenre,\r\n  fetchPersons,\r\n  fetchTopratedMovie,\r\n} from \"./api.js\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nfunction Sign({match}) {\r\n  const params=match.params;\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [movieByGenre, setMovieByGenre] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setNowPlaying(await fetchMovies());\r\n      setGenres(await fetchGenre());\r\n      setMovieByGenre(await fetchMovieByGenre(28));\r\n      setPersons(await fetchPersons());\r\n      setTopRated(await fetchTopratedMovie());\r\n      console.log(nowPlaying);\r\n      console.log(genres);\r\n      console.log(genres);\r\n      console.log(topRated);\r\n      console.log(topRated);\r\n      console.log(genres);\r\n    }; fetchAPI();\r\n  }, []);\r\n   const handleGenreClick = async (genre_id) => {\r\n    setMovieByGenre(await fetchMovieByGenre(genre_id));\r\n  };\r\n \r\n  const genreList = genres.map((item, index) => {\r\n    return (\r\n      <li className=\"list-inline-item\" key={index}>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-info\"\r\n          onClick={() => {\r\n            handleGenreClick(item.id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n  const trendingPersons = persons.slice(0, 4).map((p, i) => {\r\n    return (\r\n      <div className=\"col-md-3 text-center\" key={i}>\r\n        <img\r\n          className=\"img-fluid rounded-circle mx-auto d-block\"\r\n          src={p.profileImg}\r\n          alt={p.name}\r\n        ></img>\r\n        <p className=\"font-weight-bold text-center\">{p.name}</p>\r\n        <p\r\n          className=\"font-weight-light text-center\"\r\n          style={{ color: \"#5a606b\" }}\r\n        >\r\n          Trending for {p.known}\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n const topRatedList = topRated.slice(0, 4).map((item, index) => { return ( <div className=\"col-md-3\" key={index}> <div className=\"card\"> <Link to={`/movie/${item.id}`}><img className=\"img-fluid\" src={item.poster} alt={item.title} ></img></Link>  </div> <div className=\"mt-3\"> <p style={{ fontWeight: \"bolder\" }}>{item.title}</p> <p>Rated: {item.rating}</p> <ReactStars count={item.rating} size={20} color1={\"#f4c10f\"} ></ReactStars> </div> </div> ); });\r\n const movieList = movieByGenre.slice(0, 4).map((item, index) => { return ( <div className=\"col-md-3 col-sm-6\" key={index}> <div className=\"card\"> <Link to={`/movie/${item.id}`}><img className=\"img-fluid\" src={item.poster} alt={item.title} id=\"card\"></img></Link>  </div> <div className=\"mt-3\"> <p style={{ fontWeight: \"bolder\" }}>{item.title}</p> <p>Rated: {item.rating}</p> <ReactStars count={item.rating} size={20} color1={\"#f4c10f\"} ></ReactStars> </div> </div> ); });\r\n  return (\r\n    <React.Fragment>\r\n    <div className=\"App\">\r\n      <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\r\n    <a href=\"#\" class=\"navbar-brand\">MOVIE</a>\r\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\r\n        <div class=\"navbar-nav\">\r\n            <a href=\"/\" class=\"nav-item nav-link active\">Home</a>\r\n            <a href=\"/watchlist\" class=\"nav-item nav-link\">Watchlist</a>\r\n        </div>\r\n        <form class=\"form-inline\">\r\n            <div class=\"input-group\">                    \r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\"/>\r\n                <div class=\"input-group-append\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\"><i class=\"fa fa-search\"></i></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"navbar-nav\">\r\n          <a class=\"nav-item nav-link\"> {params.user}</a>\r\n        </div>\r\n\r\n    </div>\r\n</nav>\r\n\r\n     <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <ul className=\"list-inline\">{genreList}</ul>\r\n        </div>\r\n      </div>\r\n  <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"fa-arrow\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{movieList}</div>\r\n <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            TRENDING PERSONS ON THIS WEEK\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"fa fa-arrow\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{trendingPersons}</div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            TOP RATED MOVIES\r\n          </p>\r\n        </div>\r\n      </div>\r\n <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <i className=\"far fa-arrow\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">{topRatedList}</div>\r\n\r\n      <hr className=\"mt-5\" style={{ borderTop: \"1px solid #5a606b\" }}></hr>\r\n    </div>\r\n   \r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Sign;\r\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":12},{"ruleId":"103","severity":1,"message":"107","line":6,"column":29,"nodeType":"105","messageId":"106","endLine":6,"endColumn":35},{"ruleId":"103","severity":1,"message":"108","line":10,"column":7,"nodeType":"105","messageId":"106","endLine":10,"endColumn":13},{"ruleId":"103","severity":1,"message":"109","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"103","severity":1,"message":"110","line":15,"column":12,"nodeType":"105","messageId":"106","endLine":15,"endColumn":22},{"ruleId":"103","severity":1,"message":"111","line":23,"column":10,"nodeType":"105","messageId":"106","endLine":23,"endColumn":11},{"ruleId":"103","severity":1,"message":"112","line":50,"column":11,"nodeType":"105","messageId":"106","endLine":50,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":102,"column":5,"nodeType":"115","endLine":102,"endColumn":38},{"ruleId":"116","severity":1,"message":"117","line":132,"column":3,"nodeType":"115","endLine":132,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":143,"column":3,"nodeType":"115","endLine":143,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":154,"column":3,"nodeType":"115","endLine":154,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":165,"column":3,"nodeType":"115","endLine":165,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":178,"column":3,"nodeType":"115","endLine":178,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":189,"column":3,"nodeType":"115","endLine":189,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":200,"column":3,"nodeType":"115","endLine":200,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":211,"column":3,"nodeType":"115","endLine":211,"endColumn":110},{"ruleId":"103","severity":1,"message":"118","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":12},{"ruleId":"119","severity":1,"message":"120","line":36,"column":6,"nodeType":"121","endLine":36,"endColumn":17,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":43,"column":30,"nodeType":"125","messageId":"126","endLine":43,"endColumn":32},{"ruleId":"103","severity":1,"message":"127","line":53,"column":7,"nodeType":"105","messageId":"106","endLine":53,"endColumn":8},{"ruleId":"123","severity":1,"message":"124","line":138,"column":9,"nodeType":"125","messageId":"126","endLine":138,"endColumn":11},{"ruleId":"113","severity":1,"message":"114","line":157,"column":5,"nodeType":"115","endLine":157,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":165,"column":13,"nodeType":"115","endLine":165,"endColumn":51},{"ruleId":"113","severity":1,"message":"114","line":177,"column":13,"nodeType":"115","endLine":177,"endColumn":51},{"ruleId":"103","severity":1,"message":"128","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":12},{"ruleId":"103","severity":1,"message":"129","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":14},{"ruleId":"103","severity":1,"message":"130","line":8,"column":15,"nodeType":"105","messageId":"106","endLine":8,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":46,"column":21,"nodeType":"115","endLine":46,"endColumn":59},{"ruleId":"113","severity":1,"message":"114","line":50,"column":33,"nodeType":"115","endLine":50,"endColumn":85},{"ruleId":"113","severity":1,"message":"114","line":51,"column":33,"nodeType":"115","endLine":51,"endColumn":83},{"ruleId":"113","severity":1,"message":"114","line":52,"column":33,"nodeType":"115","endLine":52,"endColumn":83},{"ruleId":"103","severity":1,"message":"130","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":16},{"ruleId":"119","severity":1,"message":"131","line":28,"column":4,"nodeType":"121","endLine":28,"endColumn":6,"suggestions":"132"},{"ruleId":"113","severity":1,"message":"114","line":52,"column":5,"nodeType":"115","endLine":52,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":60,"column":13,"nodeType":"115","endLine":60,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":72,"column":13,"nodeType":"115","endLine":72,"endColumn":51},{"ruleId":"103","severity":1,"message":"109","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"119","severity":1,"message":"133","line":35,"column":6,"nodeType":"121","endLine":35,"endColumn":8,"suggestions":"134"},{"ruleId":"113","severity":1,"message":"114","line":79,"column":5,"nodeType":"115","endLine":79,"endColumn":38},{"ruleId":"113","severity":1,"message":"135","line":98,"column":11,"nodeType":"115","endLine":98,"endColumn":40},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'search' is assigned a value but never used.","'RBCarousel' is defined but never used.","'nowPlaying' is assigned a value but never used.","'v' is assigned a value but never used.","'S' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Back' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'video'. Either include it or remove the dependency array.","ArrayExpression",["138"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'z' is assigned a value but never used.","'data' is defined but never used.","'sign' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state.id' and 'state.results'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has missing dependencies: 'genres', 'nowPlaying', and 'topRated'. Either include them or remove the dependency array.",["140"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [params.id, video]",{"range":"147","text":"148"},"Update the dependencies array to be: [state.id, state.results]",{"range":"149","text":"150"},"Update the dependencies array to be: [genres, nowPlaying, topRated]",{"range":"151","text":"152"},[1106,1117],"[params.id, video]",[644,646],"[state.id, state.results]",[1118,1120],"[genres, nowPlaying, topRated]"]